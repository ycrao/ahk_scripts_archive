pGraphics：不知怎么理解，Draw和Fill命令都要用到这个
ARGB：透明度+RGB色，
pBitmap
DC：device context，
pPen：钢笔工具指针（Pointer这个不知是不是译为指针，handle这个我译为句柄），用于Draw类命令
pBrush：刷子工具指针，用于Fill类命令
Points：路径，用|隔开的坐标组，如"x1,y1|x2,y2|x3,y3....."
X,Y：左上角坐标
r:圆角半径
W,H：宽度，高度（椭圆中即为长轴和短轴，分别代表水平方向轴和垂直方向轴）
StartAngle：起始角度，以X正向为0顺时针方向旋转计算
SweepAngle：掠过角度，即扇角度

UpdateLayeredWindow(hwnd, hdc, x="", y="", w="", h="", Alpha=255)		;用自己画的hdc更新窗口hwnd，ALPHA 透明度，成功返回非0
BitBlt(ddc, dx, dy, dw, dh, sdc, sx, sy, Raster="")						;，成功返回非0
StretchBlt(ddc, dx, dy, dw, dh, sdc, sx, sy, sw, sh, Raster="")			;好像和上一个函数差不多，只是来源多宽高参数，成功返回非0
SetStretchBltMode(hdc, iStretchMode=4)
SetImage(hwnd, hBitmap)
SetSysColorToControl(hwnd, SysColor=15)

pBitmap=Gdip_BitmapFromScreen(Screen=0, Raster="")						;坐屏幕返回，默认整个屏幕（还是显示区域，搞不清楚），成功返回pBitmap指针
pBitmap=Gdip_BitmapFromHWND(hwnd)											;从hwnd返回，成功返回pBitmap指针

CreateRectF(ByRef RectF, x, y, w, h)										;创建矩形对象，包含坐标，宽，高
CreateSizeF(ByRef SizeF, w, h)												;创建尺寸对象，包含宽，高
CreatePointF(ByRef PointF, x, y)											;创建位置对象，包含坐标
CreateDIBSection(w, h, hdc="", bpp=32, ByRef ppvBits=0)					;创建绘图区
PrintWindow(hwnd, hdc, Flags=0)
DestroyIcon(hIcon)
PaintDesktop(hdc)
CreateCompatibleBitmap(hdc, w, h)
CreateCompatibleDC(hdc=0)													;成功返回现有设备（显示器？）句柄DC
SelectObject(hdc, hgdiobj)													;在DC中选择一个对象
DeleteObject(hObject)														;删除对象
GetDC(hwnd=0)																;用句柄获取DC?
ReleaseDC(hdc, hwnd=0)														;释放DC（清空？）
DeleteDC(hdc)																;删除DC

Gdip_LibraryVersion()														;版本号
Gdip_BitmapFromBRA(ByRef BRAFromMemIn, File, Alternate=0)					;返回pBitmap指针



;钢笔工具
Gdip_DrawRectangle(pGraphics, pPen, x, y, w, h)				;画矩形，与填充矩形参数相同，钢笔工具
Gdip_DrawRoundedRectangle(pGraphics, pPen, x, y, w, h, r)		;画圆角矩形，与填充圆角矩形参数相同，钢笔工具
Gdip_DrawEllipse(pGraphics, pPen, x, y, w, h)					;画椭圆，与填充椭圆参数相同，用钢笔工具
Gdip_DrawBezier(pGraphics, pPen, x1, y1, x2, y2, x3, y3, x4, y4)		;画贝塞尔曲线
Gdip_DrawArc(pGraphics, pPen, x, y, w, h, StartAngle, SweepAngle)		;参考Gdip_DrawPie，参数相同，不包括扇形的两条半径边
Gdip_DrawPie(pGraphics, pPen, x, y, w, h, StartAngle, SweepAngle)		;画扇形,与Gdip_FillPie填充命令相比，就只有边框
Gdip_DrawLine(pGraphics, pPen, x1, y1, x2, y2)							;根据两坐标画线
Gdip_DrawLines(pGraphics, pPen, Points)			;根据路径点画线，有Gdip_DrawLine的功能，看来不用记Gdip_DrawLine了
;刷子工具
Gdip_FillRectangle(pGraphics, pBrush, x, y, w, h)					;填充矩形，同Gdip_FillRoundedRectangle中r=0
Gdip_FillRoundedRectangle(pGraphics, pBrush, x, y, w, h, r)		;填充圆角矩形
Gdip_FillPolygon(pGraphics, pBrush, Points, FillMode=0)		;填充多边形
Gdip_FillPie(pGraphics, pBrush, x, y, w, h, StartAngle, SweepAngle)		;参考Gdip_FillEllipse，多两角度参数，扇形角度（若>=360，则同Gdip_FillEllipse效果一样）
Gdip_FillEllipse(pGraphics, pBrush, x, y, w, h)		;填充椭圆，参数参考Gdip_FillPie
Gdip_FillRegion(pGraphics, pBrush, Region)		;填充区域
Gdip_FillPath(pGraphics, pBrush, Path)
;
Gdip_DrawImagePointsRect(pGraphics, pBitmap, Points, sx="", sy="", sw="", sh="", Matrix=1)		;此处Points只支持上左，上右，下左三组坐标
Gdip_DrawImage(pGraphics, pBitmap, dx="", dy="", dw="", dh="", sx="", sy="", sw="", sh="", Matrix=1)	;用pBitmap画pGraphics，dxywh为目录，sxywh为来源

Gdip_SetImageAttributesColorMatrix(Matrix)						;设置图象颜色调整矩阵
Gdip_GraphicsFromImage(pBitmap)									;由pBitmap返回pGraphics
Gdip_GraphicsFromHDC(hdc)										;由DC返回pGraphics
Gdip_GetDC(pGraphics)											;由pGraphics返回DC
Gdip_ReleaseDC(pGraphics, hdc)
Gdip_GraphicsClear(pGraphics, ARGB=0x00ffffff)				;用指定颜色清除pGraphics上的图像(效果就是用第二参数的颜色填充整个pGraphics)
Gdip_BlurBitmap(pBitmap, Blur)									;使pBitmap模糊？Blur值1～100
Gdip_SaveBitmapToFile(pBitmap, sOutput, Quality=100)			;保存到文件
Gdip_GetPixel(pBitmap, x, y)									;pBitmap上x,y坐标像素颜色，返回值ARGB
Gdip_SetPixel(pBitmap, x, y, ARGB)								;设置某点颜色
;---------------------------------------------------------------------------------------------------
Gdip_GetImageWidth(pBitmap)												;获取宽度
Gdip_GetImageHeight(pBitmap)											;获取高度
Gdip_GetDimensions(pBitmap, ByRef Width, ByRef Height)				;获取尺寸，宽，高一起返回，就是上两个函数的组合
Gdip_GetDpiX(pGraphics)													;水平方向每英寸多少个点(像素)
Gdip_GetDpiY(pGraphics)													;垂直方向每英寸多少个点(像素)
Gdip_GetImageHorizontalResolution(pBitmap)								;水平方向分辨率
Gdip_GetImageVerticalResolution(pBitmap)								;垂直方向分辨率
;----------------------------------------------------------------------------------------------------
Gdip_CreateBitmapFromFile(sFile, IconNumber=1, IconSize="")			;从文件（如EXE,DLL）创建返回pBitmap

Gdip_CreateBitmapFromHBITMAP(hBitmap, Palette=0)
Gdip_CreateHBITMAPFromBitmap(pBitmap, Background=0xffffffff)

Gdip_CreateBitmapFromHICON(hIcon)										;返回pBitmap
Gdip_CreateHICONFromBitmap(pBitmap)

Gdip_CreateBitmap(Width, Height, Format=0x26200A)						;返回pBitmap

Gdip_CreateBitmapFromClipboard()										;从剪贴板创建，返回pBitmap
Gdip_SetBitmapToClipboard(pBitmap)										;从pBitmap到剪贴板
Gdip_CloneBitmapArea(pBitmap, x, y, w, h, Format=0x26200A)			;复制某个区域，返回pBitmap

Gdip_CreatePen(ARGB, w)													;用颜色，线宽创建钢笔工具，返回pPen,用于Draw命令
Gdip_CreatePenFromBrush(pBrush, w)										;从刷子创建钢笔工具，即用刷子的颜色，设置线宽
Gdip_BrushCreateSolid(ARGB=0xff000000)									;用颜色创建刷子，返回pBrush，用于Fill命令
Gdip_BrushCreateHatch(ARGBfront, ARGBback, HatchStyle=0)				;用前景色，背景色，图案类型（0～53）创建刷子
Gdip_CreateTextureBrush(pBitmap, WrapMode=1, x=0, y=0, w="", h="")
Gdip_CreateLineBrush(x1, y1, x2, y2, ARGB1, ARGB2, WrapMode=1)
Gdip_CreateLineBrushFromRect(x, y, w, h, ARGB1, ARGB2, LinearGradientMode=1, WrapMode=1)
Gdip_CloneBrush(pBrush)
Gdip_DeletePen(pPen)
Gdip_DeleteBrush(pBrush)
Gdip_DisposeImage(pBitmap)
Gdip_DeleteGraphics(pGraphics)
Gdip_DisposeImageAttributes(ImageAttr)

Gdip_DeleteFont(hFont)
Gdip_DeleteStringFormat(hFormat)
Gdip_DeleteFontFamily(hFamily)
Gdip_DeleteMatrix(Matrix)

;文本类
Gdip_TextToGraphics(pGraphics, Text, Options, Font="Arial", Width="", Height="", Measure=0)
Gdip_DrawString(pGraphics, sString, hFont, hFormat, pBrush, ByRef RectF)
Gdip_MeasureString(pGraphics, sString, hFont, hFormat, ByRef RectF)
Gdip_SetStringFormatAlign(hFormat, Align)
Gdip_StringFormatCreate(Format=0, Lang=0)
Gdip_FontCreate(hFamily, Size, Style=0)
Gdip_FontFamilyCreate(Font)
Gdip_CreateAffineMatrix(m11, m12, m21, m22, x, y)
Gdip_CreateMatrix()
Gdip_CreatePath(BrushMode=0)
Gdip_AddPathEllipse(Path, x, y, w, h)
Gdip_AddPathPolygon(Path, Points)
Gdip_DeletePath(Path)
;渲染设置
Gdip_SetTextRenderingHint(pGraphics, RenderingHint)											;文本渲染，0～4
Gdip_SetInterpolationMode(pGraphics, InterpolationMode)										;插值，0～7
Gdip_SetSmoothingMode(pGraphics, SmoothingMode)												;设置抗锯齿，0～4
Gdip_SetCompositingMode(pGraphics, CompositingMode=0)										;合成模式，0混合（blended），1覆盖（overwrite）
;开启，关闭
Gdip_Startup()																				;不知详细啥用，反正用之前先开，用完了关
Gdip_Shutdown(pToken)
;----------------图象变化函数---------------
Gdip_RotateWorldTransform(pGraphics, Angle, MatrixOrder=0)									;旋转坐标，要画斜方向的图，先转坐标，类似于CAD
Gdip_ScaleWorldTransform(pGraphics, x, y, MatrixOrder=0)								;缩放，配合平移可实现图像反转(如缩放X为-1，平移X为-Width)
Gdip_TranslateWorldTransform(pGraphics, x, y, MatrixOrder=0)								;平移
Gdip_ResetWorldTransform(pGraphics)															;重置世界坐标？
Gdip_GetRotatedTranslation(Width, Height, Angle, ByRef xTranslation, ByRef yTranslation)	;获取旋转后变化？
Gdip_GetRotatedDimensions(Width, Height, Angle, ByRef RWidth, ByRef RHeight)				;获取旋转后尺寸？
;------------------------------------------------------
Gdip_SetClipRect(pGraphics, x, y, w, h, CombineMode=0)
Gdip_SetClipPath(pGraphics, Path, CombineMode=0)
Gdip_ResetClip(pGraphics)
Gdip_GetClipRegion(pGraphics)
Gdip_SetClipRegion(pGraphics, Region, CombineMode=0)
Gdip_CreateRegion()
Gdip_DeleteRegion(Region)
